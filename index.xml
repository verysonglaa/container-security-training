<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes Security Training</title><link>/</link><description>Recent content on Kubernetes Security Training</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>1. Getting started</title><link>/docs/container-basics/_geting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/container-basics/_geting-started/</guid><description>The command line tool First it is time to become familiar with the command line utility. Using Docker consists of passing at least one command. docker --help shows the available options:
docker --help Usage: docker COMMAND A self-sufficient runtime for containers Options: --config string Location of client config files (default &amp;#34;/home/user/.docker&amp;#34;) -D, --debug Enable debug mode --help Print usage -H, --host list Daemon socket(s) to connect to -l, --log-level string Set the logging level (&amp;#34;debug&amp;#34;|&amp;#34;info&amp;#34;|&amp;#34;warn&amp;#34;|&amp;#34;error&amp;#34;|&amp;#34;fatal&amp;#34;) (default &amp;#34;info&amp;#34;) --tls Use TLS; implied by --tlsverify --tlscacert string Trust certs signed only by this CA (default &amp;#34;/home/user/.</description></item><item><title>2. Images</title><link>/docs/container-basics/_images/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/container-basics/_images/</guid><description>Docker images You can search for images available on Docker Hub by clicking the Explore link or by typing mariadb into the search field: https://hub.docker.com/search/?q=mariadb&amp;type=image You will get a list of results and the first hit will probably be the official image: https://hub.docker.com/_/mariadb This page contains instructions on how to pull the image. Let&amp;rsquo;s do that:
docker pull mariadb Note Care about security! Check the images before you run them. Is it an official image ?</description></item><item><title>3. Environment variables</title><link>/docs/container-basics/_env-vars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/container-basics/_env-vars/</guid><description>Environment variables So why was there an error in the previous lab? The MariaDB server is not able to run without a proper configuration. Docker can pass variables into the instantiation process via environment variables. Environment variables are passed via the parameter -e, e.g.:
docker run -it -e MARIADB_ROOT_PASSWORD=my-secret-pw mariadb Once you run the command you will see an output like this:
Initializing database PLEASE REMEMBER TO SET A PASSWORD FOR THE MariaDB root USER !</description></item><item><title>Docker/Container Security</title><link>/docs/container/container/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/container/container/</guid><description>Table of Contents Introduction Prerequisites Namespaces PID Namespace Network Namespace Mount Namespace Seccomp AppArmor SELinux Cgroups Additional Security Practices Conclusion Introduction In this lab, you will learn about various security mechanisms available in Docker and containers, including namespaces, seccomp, AppArmor, SELinux, and cgroups. You will also learn how containers communicate with the Linux kernel and how to secure this communication.
Prerequisites A system with Docker installed (preferably a Linux system) Basic knowledge of Docker and Linux commands Namespaces Namespaces are one of the fundamental building blocks of container isolation.</description></item></channel></rss>